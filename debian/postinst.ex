#!/bin/sh
# postinst script for vanosilla
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
        # Modify Redis configuration file to include desired options
        sed -i 's/^# appendonly no/appendonly yes/' /etc/redis/redis.conf
        sed -i 's/^# notify-keyspace-events ""/notify-keyspace-events Kx/' /etc/redis/redis.conf

        # Restart Redis service to apply changes
        systemctl restart redis-server

        # Set the PostgreSQL password
        echo "ALTER USER postgres PASSWORD 'VaNOSilla2022';" | sudo -u postgres psql

        # Restart PostgreSQL service to apply changes
        systemctl restart postgresql

        # Set MongoDB root username and password
        echo "Setting MongoDB root username and password..."
        echo "db.createUser({ user: 'root', pwd: 'root', roles: ['root'] })" | mongo admin

        # Build the solution in the src folder
        echo "Building the solution in the src folder..."
        cd /src && dotnet build
    ;;

    # Handle other cases as needed
    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac


# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
